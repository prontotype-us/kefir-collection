// Generated by CoffeeScript 1.10.0
var Kefir, KefirBus, assign, makeCollectionStream, mergeArrays;

Kefir = require('kefir');

KefirBus = require('kefir-bus');

assign = function(old_object, new_object) {
  var k, v;
  for (k in new_object) {
    v = new_object[k];
    old_object[k] = v;
  }
  return old_object;
};

mergeArrays = function(old_array, new_array, id_key) {
  var existing_item, i, item, item_id, items_by_id, j, len, len1, merged_array, new_items;
  merged_array = [];
  items_by_id = [];
  new_items = [];
  for (i = 0, len = old_array.length; i < len; i++) {
    item = old_array[i];
    items_by_id[item[id_key]] = item;
  }
  for (j = 0, len1 = new_array.length; j < len1; j++) {
    item = new_array[j];
    if (existing_item = items_by_id[item[id_key]]) {
      assign(existing_item, item);
    } else {
      items_by_id[item[id_key]] = item;
      new_items.push(item);
    }
  }
  for (item_id in items_by_id) {
    item = items_by_id[item_id];
    merged_array.push(item);
  }
  return [merged_array, new_items];
};

module.exports = makeCollectionStream = function(items, options) {
  var _collection$, collection$, id_key;
  if (items == null) {
    items = [];
  }
  if (options == null) {
    options = {};
  }
  id_key = options.id_key || '_id';
  _collection$ = KefirBus();
  collection$ = _collection$.toProperty();
  collection$.emit = _collection$.emit;
  collection$.plug = function(items$) {
    return items$.onValue(function(items) {
      return collection$.setItems(items, true);
    });
  };
  collection$.onValue(function(_items) {
    return collection$.last_items = _items;
  });
  collection$.filterItems = function(filter) {
    return collection$.map(function(items) {
      return items.filter(filter);
    });
  };
  collection$._getItem = function(item_id) {
    return items.filter(function(item) {
      return item[id_key] === item_id;
    })[0];
  };
  collection$.item$s = {};
  collection$.getItem = function(item_id) {
    var _item$, item$;
    if (!(item$ = collection$.item$s[item_id])) {
      _item$ = KefirBus();
      item$ = _item$.toProperty();
      item$.emit = _item$.emit;
      item$.onValue(function() {});
      collection$.item$s[item_id] = item$;
    }
    return item$;
  };
  collection$.setItems = function(items, append) {
    var all_items, new_items, ref;
    if (append == null) {
      append = false;
    }
    if (append) {
      ref = mergeArrays(collection$.last_items, items, id_key), all_items = ref[0], new_items = ref[1];
      collection$.emit(all_items);
      return new_items.map(function(item) {
        var item$;
        return item$ = collection$.setItem(item);
      });
    } else {
      collection$.emit(items);
      return items.map(function(item) {
        var item$;
        return item$ = collection$.setItem(item);
      });
    }
  };
  collection$.setItem = function(item) {
    var item$;
    item$ = collection$.getItem(item[id_key]);
    item$.emit(item);
    return item$;
  };
  collection$.updateItem = function(item_id, update) {
    var item, item$;
    items = collection$.last_items;
    item = collection$._getItem(item_id);
    if (item == null) {
      update[id_key] = item_id;
      return collection$.createItem(update);
    }
    assign(item, update);
    item$ = collection$.getItem(item_id);
    collection$.emit(items);
    item$.emit(item);
    return item$;
  };
  collection$.createItem = function(new_item) {
    items = collection$.last_items;
    items.push(new_item);
    collection$.emit(items);
    return collection$.setItem(new_item);
  };
  collection$.removeItem = function(item_id) {
    items = collection$.last_items;
    items = items.filter(function(item) {
      return item[id_key] !== item_id;
    });
    collection$.emit(items);
    return collection$;
  };
  collection$.setItems(items);
  return collection$;
};
